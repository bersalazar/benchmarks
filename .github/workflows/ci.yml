name: Continuous Integration
on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize]
    branches:
      - master
  schedule:
    - cron: '0 0 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.java.installations.auto-detect=false -Dorg.gradle.warning.mode=all'
  JAVA_VERSION: '17'
permissions:
  contents: read

jobs:
  java-build:
    name: Java ${{ matrix.java }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        java: [ '17', '21' ]
        os: [ 'ubuntu-24.04' ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java }}
      - name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION (Linux)
        if: runner.os == 'Linux'
        run: |
          java -Xinternalversion
          echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV
          echo "BUILD_JAVA_VERSION=${{ matrix.java }}" >> $GITHUB_ENV
      - name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION (Windows)
        if: runner.os == 'Windows'
        run: |
          java -Xinternalversion
          echo "BUILD_JAVA_HOME=$env:JAVA_HOME" | Out-File $env:GITHUB_ENV -Encoding utf8 -Append
          echo "BUILD_JAVA_VERSION=${{ matrix.java }}" | Out-File $env:GITHUB_ENV -Encoding utf8 -Append
      - name: Setup java 17 to run the Gradle script
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
      - name: Build with Gradle
        run: ./gradlew
      - name: Copy test logs
        id: copy_test_logs
        if: failure()
        run: |
          echo "::set-output name=file::build/distributions/test_logs.tbz2"
          ./gradlew tarTestLogs
      - name: Upload crash logs
        if: always() && steps.copy_test_logs.outputs.file == 'build/distributions/test_logs.tbz2'
        uses: actions/upload-artifact@v5
        with:
          name: crash-logs-${{ matrix.os }}-java-${{ matrix.java }}
          path: ${{ steps.copy_test_logs.outputs.file }}

  cpp-gcc-build:
    name: C++ GCC ${{ matrix.version }}
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        version: [ '14' ]
    env:
      CC: gcc-${{ matrix.version }}
      CXX: g++-${{ matrix.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}
      - name: Setup java 17 to run the Gradle script
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}
      - name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION
        run: |
          java -Xinternalversion
          echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV
          echo "BUILD_JAVA_VERSION=${{ env.JAVA_VERSION }}" >> $GITHUB_ENV
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
      - name: Install compiler
        run: |
          sudo apt-get update || true
          sudo apt-get install -y g++-${{ matrix.version }} libbsd-dev uuid-dev
      - name: Build
        run: cppbuild/cppbuild
      - name: Copy test logs
        id: copy_test_logs
        if: failure()
        run: |
          echo "::set-output name=file::build/distributions/test_logs.tbz2"
          ./gradlew tarTestLogs
      - name: Upload crash logs
        if: always() && steps.copy_test_logs.outputs.file == 'build/distributions/test_logs.tbz2'
        uses: actions/upload-artifact@v5
        with:
          name: crash-logs-${{ matrix.os }}-gcc-${{ matrix.version }}
          path: ${{ steps.copy_test_logs.outputs.file }}

  cpp-clang-build:
    name: C++ Clang ${{ matrix.version }}
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        version: [ '20' ]
    env:
      CC: clang-${{ matrix.version }}
      CXX: clang++-${{ matrix.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}
      - name: Setup java 17 to run the Gradle script
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}
      - name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION
        run: |
          java -Xinternalversion
          echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV
          echo "BUILD_JAVA_VERSION=${{ env.JAVA_VERSION }}" >> $GITHUB_ENV
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
      - name: Install compiler
        run: |
          sudo mkdir -p /etc/apt/keyrings/
          curl https://apt.llvm.org/llvm-snapshot.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/llvm-snapshot.gpg
          echo "deb [signed-by=/etc/apt/keyrings/llvm-snapshot.gpg] https://apt.llvm.org/noble/ llvm-toolchain-noble-${{ matrix.version }} main" | sudo tee /etc/apt/sources.list.d/llvm.list
          sudo apt-get update
          sudo apt-get install -y clang-${{ matrix.version }} libbsd-dev uuid-dev
      - name: Build
        run: cppbuild/cppbuild
      - name: Upload crash logs
        if: always() && steps.copy_test_logs.outputs.file == 'build/distributions/test_logs.tbz2'
        uses: actions/upload-artifact@v5
        with:
          name: crash-logs-${{ matrix.os }}-clang-${{ matrix.version }}
          path: ${{ steps.copy_test_logs.outputs.file }}
